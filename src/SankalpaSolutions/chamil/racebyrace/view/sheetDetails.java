/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SankalpaSolutions.chamil.racebyrace.view;

import SankalpaSolutions.chamil.racebyrace.controller.AccountController;
import SankalpaSolutions.chamil.racebyrace.controller.CenterController;
import SankalpaSolutions.chamil.racebyrace.controller.SheetDetailsController;
import SankalpaSolutions.chamil.racebyrace.model.Account;
import SankalpaSolutions.chamil.racebyrace.model.Center;
import SankalpaSolutions.chamil.racebyrace.model.SheetDetails;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Win 8
 */
public class sheetDetails extends javax.swing.JPanel {

    /**
     * Creates new form sheetDetails
     */
    public sheetDetails() {
        initComponents();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        //get current date time with Date()
        Date date = new Date();
        jLabel2.setText(dateFormat.format(date));
        jTable9.setVisible(false);
        jScrollPane6.setVisible(false);
        jTable10.setVisible(false);
        jScrollPane7.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jTextField10 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1322, 540));
        setMinimumSize(new java.awt.Dimension(1322, 540));

        jPanel1.setMaximumSize(new java.awt.Dimension(1322, 540));
        jPanel1.setMinimumSize(new java.awt.Dimension(1322, 540));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 110, -1));

        jLabel17.setText("Search Items");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 392, 70, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 402, 306, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SankalpaSolutions/chamil/racebyrace/images/search.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 423, 99, 101));

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable10.setGridColor(new java.awt.Color(204, 204, 204));
        jTable10.getTableHeader().setReorderingAllowed(false);
        jTable10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable10MousePressed(evt);
            }
        });
        jTable10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable10KeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(jTable10);
        if (jTable10.getColumnModel().getColumnCount() > 0) {
            jTable10.getColumnModel().getColumn(1).setMinWidth(50);
            jTable10.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel1.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 470, 200, 70));

        jTextField10.setBackground(new java.awt.Color(255, 204, 102));
        jTextField10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField10KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField10KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 200, -1));

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 499, 100, -1));

        jLabel10.setText("               Date   :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 103, -1));

        jTextField6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 110, -1));

        jLabel8.setText("          Past Deu     :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 120, 20));

        jTextField9.setBackground(new java.awt.Color(255, 204, 102));
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField9KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 200, -1));

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable9.setGridColor(new java.awt.Color(204, 204, 204));
        jTable9.getTableHeader().setReorderingAllowed(false);
        jTable9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable9MousePressed(evt);
            }
        });
        jTable9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable9KeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTable9);

        jPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 200, 70));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 178, 200, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 110, 25));

        jLabel12.setText("Add Items");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 33, 60, 20));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SankalpaSolutions/chamil/racebyrace/images/Folder.png"))); // NOI18N
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 59, 58, 50));

        jLabel4.setText("               Date     :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 110, 30));

        jLabel15.setText(" Center  Name     :");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 110, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 143, 110, 25));

        jLabel11.setText("Center Number    :");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 145, 110, 20));

        jLabel3.setText("Account  Name     :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 178, 120, 20));

        jLabel5.setText("  Full Collection     :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 215, 120, 20));

        jTextField3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 213, 110, -1));

        jLabel6.setText("                Cash     :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 243, 120, 20));

        jTextField4.setBackground(new java.awt.Color(255, 204, 102));
        jTextField4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 243, 110, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 80, 20));

        jLabel21.setText("Search by name    :");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 103, -1));

        jLabel7.setText("             Excess     :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 275, 120, 20));

        jTextField5.setBackground(new java.awt.Color(255, 204, 102));
        jTextField5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 275, 110, -1));

        jButton1.setText("Add");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 100, -1));

        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 90, -1));

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 500, 90, -1));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Center Name", "Center Number", "Account Name", "Full Collection", "Cash", "Excess", "Past Due"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(21);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(2).setMinWidth(90);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(90);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(7).setMinWidth(100);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 11, -1, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 43, 306, -1));

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SankalpaSolutions/chamil/racebyrace/images/centerBackground.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 540));

        jLabel18.setText("Search Items");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 392, 70, 20));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 402, 306, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SankalpaSolutions/chamil/racebyrace/images/search.png"))); // NOI18N
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 423, 99, 101));

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 499, 87, -1));

        jLabel20.setText("Search by name    :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 426, 103, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        jTextField4.grabFocus();// TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        if (jTextField3.getText().length() == 0) {
            jButton1.setEnabled(false);
            jButton6.setEnabled(false);
        } else {
            if (jTextField9.getText().length() != 0 && jTextField3.getText().length() != 0 && jTextField4.getText().length() != 0 && jTextField5.getText().length() != 0 && jTextField6.getText().length() != 0) {
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);
            } else {
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        jTextField5.grabFocus();// TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        jTextField6.grabFocus();// TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        if (jTextField5.getText().length() == 0) {
            jButton1.setEnabled(false);
            jButton6.setEnabled(false);
        } else {
            if (jTextField9.getText().length() != 0 && jTextField3.getText().length() != 0 && jTextField4.getText().length() != 0 && jTextField5.getText().length() != 0 && jTextField6.getText().length() != 0) {
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);
            } else {
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            SheetDetails sheetDetails = new SheetDetails(null, jLabel2.getText(), jLabel16.getText(), Double.parseDouble(jTextField3.getText()), Double.parseDouble(jTextField4.getText()), Double.parseDouble(jTextField5.getText()), Double.parseDouble(jTextField6.getText()));
            int res = 0;
            res = SheetDetailsController.addSheetDetails(sheetDetails);
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "added sucsess");
            }
            int max = SheetDetailsController.serchMaxItem();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            Vector v = new Vector();
            v.add(max - 1);
            v.add(jTextField9.getText());
            v.add(jLabel16.getText());
            v.add(jLabel13.getText());
            v.add(jTextField3.getText());
            v.add(jTextField4.getText());
            v.add(jTextField5.getText());
            v.add(jTextField6.getText());

            dtm.addRow(v);

            jTextField9.setText("");
            jLabel16.setText("");
            jLabel13.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
            jTextField9.grabFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        SheetDetails sheetd = new SheetDetails(null, jLabel2.getText(), jLabel16.getText(), Double.parseDouble(jTextField3.getText()), Double.parseDouble(jTextField4.getText()), Double.parseDouble(jTextField5.getText()), Double.parseDouble(jTextField6.getText()));
        int res = 0;

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int j = jTable1.getSelectedRow();
        dtm.setValueAt(jTextField9.getText(), j, 0);
        dtm.setValueAt(jLabel16.getText(), j, 1);
        dtm.setValueAt(jLabel13.getText(), j, 2);
        dtm.setValueAt(jTextField3.getText(), j, 3);
        dtm.setValueAt(jTextField4.getText(), j, 4);
        dtm.setValueAt(jTextField5.getText(), j, 5);
        dtm.setValueAt(jTextField6.getText(), j, 6);

        if (res > 0) {
            JOptionPane.showMessageDialog(this, "added ");
        } else {
            JOptionPane.showMessageDialog(this, "Update sucsses");
        }
        try {
            res = SheetDetailsController.updateSheetDetails(sheetd);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Update fail");
            // Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Update fail");
            // Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField9.setText("");
        jLabel16.setText("");
        jLabel13.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");

//        try {
//          
//            SheetDetails sheetDetails = new SheetDetails(null, jLabel2.getText(), jLabel16.getText(), Double.parseDouble(jTextField3.getText()), Double.parseDouble(jTextField4.getText()), Double.parseDouble(jTextField5.getText()));
//            int res = 0;
//
//            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//            int j = jTable1.getSelectedRow();
//            dtm.setValueAt(jTextField9.getText(), j, 0);
//            dtm.setValueAt(jLabel16.getText(), j, 1);
//            dtm.setValueAt(jLabel13.getText(), j, 2);
//            dtm.setValueAt(jTextField3.getText(), j, 3);
//            dtm.setValueAt(jTextField4.getText(), j, 4);
//            dtm.setValueAt(jTextField5.getText(), j, 5);
//            if (res > 0) {
//                JOptionPane.showMessageDialog(this, "added ");
//            } else {
//                JOptionPane.showMessageDialog(this, "Update sucsses");
//            }
//            res = CenterController.updateCenter(cnter);
//            jTextField11.setText("");
//            jTextField2.setText("");
//            jTextField1.setText("");
//            jTextField3.setText("");
//            jTextField4.setText("");
//            jTextField5.setText("");
//            jTextField6.setText("");
//            jTextField7.setText("");
//            jTextField8.setText("");
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        String f = "" + i;
        if (f != null) {
            int g = JOptionPane.showConfirmDialog(null, "Are you sure want to remove Item");
            if (g == JOptionPane.YES_OPTION) {
                try {
                    SheetDetailsController.deleteSheetDetails(dtm.getValueAt(i, 0).toString());
                    dtm.removeRow(i);
                    JOptionPane.showMessageDialog(null, "Successfully Deleted");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
//        try {
//            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//            int j = jTable1.getSelectedRow();
//            String idNumber = dtm.getValueAt(j, 1).toString();
//
//            Center center = CenterController.searchCenterByIDNumber(idNumber);
//
//            jTextField11.setText("" + center.getAccount_ID());
//            jTextField2.setText(center.getCenter_ID());
//            jTextField1.setText(center.getCenter_Name());
//            jTextField3.setText(center.getCenter_com());
//            jTextField4.setText(center.getCenter_exp());
//            jTextField5.setText(center.getCenter_lessCom());
//            jTextField6.setText(center.getCenter_loan());
//            jTextField7.setText(center.getCenter_noCom());
//            jTextField8.setText(center.getCenter_paperCash());
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        jTextField3.grabFocus();
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyPressed
        if (evt.getKeyCode() == 40) {
            jTable9.grabFocus();
            ListSelectionModel selectionModel = jTable9.getSelectionModel();
            selectionModel.setSelectionInterval(0, 0);
        }
        if (evt.getKeyCode() == 32) {
            jTextField3.grabFocus();

        }
    }//GEN-LAST:event_jTextField9KeyPressed

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
       if (jTextField3.getText().length() == 0) {
            jButton1.setEnabled(false);
             jButton6.setEnabled(false);
        } else {
            if ( jTextField9.getText().length() != 0 && jTextField3.getText().length() != 0 && jTextField4.getText().length() != 0 && jTextField5.getText().length() != 0 && jTextField6.getText().length() != 0) {
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);
            } else {
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);
            }
        }
        DefaultTableModel dtm3 = (DefaultTableModel) jTable9.getModel();
        if (jTextField9.getText().length() == 0) {
        } else {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable9.getModel();

                List<Center> list = CenterController.sercLikeCenterName(jTextField9.getText());

                dtm.setRowCount(0);
                for (int i = 0; i < list.size(); i++) {
                    Vector v = new Vector();

                    v.add(list.get(i).getCenter_Name());

                    dtm.addRow(v);
                    jScrollPane6.setVisible(true);
                    jTable9.setVisible(true);
                }
                if (dtm.getRowCount() == 0) {
                    jScrollPane6.setVisible(false);
                    jTable9.setVisible(false);
                } else {
                    jScrollPane6.setVisible(true);
                    jTable9.setVisible(true);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jTextField9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9KeyTyped

    private void jTable9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable9MousePressed
        //        int Row = jTable5.getSelectedRow();
        //            jTextField3.setText(jTable5.getValueAt(Row, 0).toString());
        //            jScrollPane5.setVisible(false);
        //            jTable5.setVisible(false);
    }//GEN-LAST:event_jTable9MousePressed

    private void jTable9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable9KeyPressed
        if (evt.getKeyCode() == 10) {
            try {
                int Row = jTable9.getSelectedRow();
                jTextField9.setText(jTable9.getValueAt(Row, 0).toString());

                DefaultTableModel dtm = (DefaultTableModel) jTable9.getModel();
                List<Center> list = CenterController.searchCenterByName(jTextField9.getText());
                Account account;
                dtm.setRowCount(0);
                for (int i = 0; i < list.size(); i++) {
                    account = AccountController.searchAccountByIDNumber("" + list.get(i).getAccount_ID());
                    jLabel16.setText(list.get(i).getCenter_ID());
                    jLabel13.setText(account.getAccount_Name());
                }
                jScrollPane6.setVisible(false);
                jTable9.setVisible(false);
                jTextField3.grabFocus();
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_jTable9KeyPressed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        jButton1.grabFocus();
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        if (jTextField6.getText().length() == 0) {
            jButton1.setEnabled(false);
            jButton6.setEnabled(false);
        } else {
            if (jTextField9.getText().length() != 0 && jTextField3.getText().length() != 0 && jTextField4.getText().length() != 0 && jTextField5.getText().length() != 0 && jTextField6.getText().length() != 0) {
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);
            } else {
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField6KeyReleased

    private void jTable10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable10MousePressed
        //        int Row = jTable5.getSelectedRow();
        //            jTextField3.setText(jTable5.getValueAt(Row, 0).toString());
        //            jScrollPane5.setVisible(false);
        //            jTable5.setVisible(false);
    }//GEN-LAST:event_jTable10MousePressed

    private void jTable10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable10KeyPressed
        if (evt.getKeyCode() == 10) {
            try {
                int Row = jTable10.getSelectedRow();
                jTextField10.setText(jTable10.getValueAt(Row, 0).toString());
                jLabel22.setText(jTable10.getValueAt(Row, 1).toString());
                jScrollPane7.setVisible(false);
                jTable10.setVisible(false);
                //                jButton1.grabFocus();
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_jTable10KeyPressed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyPressed
        if (evt.getKeyCode() == 40) {
            jTable10.grabFocus();
            ListSelectionModel selectionModel = jTable10.getSelectionModel();
            selectionModel.setSelectionInterval(0, 0);
        }
//        if (evt.getKeyCode() == 32) {
//            jTextField7.grabFocus();
//
//        }
    }//GEN-LAST:event_jTextField10KeyPressed

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased

        if (jTextField10.getText().length() == 0) {
        } else {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable10.getModel();
                //                ResultSet rs1 = Db.search("SELECT*FROM race_card WHERE Horse_Name LIKE '" + jTextFieldHorseName.getText() + "%'  ");
                //                dtm.setRowCount(0);
                //                while (rs1.next()) {
                //                    Vector v = new Vector();
                //                    v.add(rs1.getString("Horse_Name"));
                //
                //                    v.add(rs1.getString("Pora"));
                ////                     System.out.println(""+rs1.getString("Pora"));
                //
                //                    dtm.addRow(v);
                ////                    addHorse
                //                    jScrollPane6.setVisible(true);
                //                    jTable9.setVisible(true);
                //                }
                //                if (dtm.getRowCount() == 0) {
                //                    jScrollPane6.setVisible(false);
                //                    jTable9.setVisible(false);
                //                } else {
                //                    jScrollPane6.setVisible(true);
                //                    jTable9.setVisible(true);
                //                }
                List<Center> list = CenterController.sercLikeCenterNameAndCenterID(jTextField10.getText());

                dtm.setRowCount(0);
                for (int i = 0; i < list.size(); i++) {
                    Vector v = new Vector();

                    v.add(list.get(i).getCenter_Name());
                    v.add(list.get(i).getCenter_ID());
                    dtm.addRow(v);
                    jScrollPane7.setVisible(true);
                    jTable10.setVisible(true);
                }
                if (dtm.getRowCount() == 0) {
                    jScrollPane7.setVisible(false);
                    jTable10.setVisible(false);
                } else {
                    jScrollPane7.setVisible(true);
                    jTable10.setVisible(true);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTextField10KeyReleased

    private void jTextField10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10KeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        Date mddate = jDateChooser1.getDate();
        String mdate = String.format("%1$tY/%1$tm/%1$td", mddate);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        try {
            if (!jDateChooser1.getDate().equals("") && !jTextField10.getText().equals("")) {

                System.out.println("date eka meka : " + mdate);
                SheetDetails sheetDetails = SheetDetailsController.searchsheetdetailsByDateAndCenterName(mdate, jLabel22.getText());
                dtm.setRowCount(0);

                Vector v = new Vector();
                dtm.setRowCount(0);
                v.add(sheetDetails.getSheetDetails_ID());
                Center center = CenterController.searchCenterByIDNumber(sheetDetails.getCenter_ID());
                Account account = AccountController.searchAccountByIDNumber("" + center.getAccount_ID());

                v.add(center.getCenter_Name());
                v.add(sheetDetails.getCenter_ID());
                v.add(account.getAccount_Name());
                v.add(sheetDetails.getSheetDetails_FC());
                v.add(sheetDetails.getSheetDetails_Cash());
                v.add(sheetDetails.getSheetDetails_Excess());
                v.add(sheetDetails.getSheetDetails_PD());

                dtm.addRow(v);

            } else if (!jDateChooser1.getDate().equals("") && jTextField10.getText().equals("")) {

                Center center;
                Account account;
                List<SheetDetails> listsheetDetails = SheetDetailsController.searchsheetdetailsByDate(mdate);
                dtm.setRowCount(0);

                for (int i = 0; i < listsheetDetails.size(); i++) {
                    Vector v = new Vector();

                    v.add(listsheetDetails.get(i).getSheetDetails_ID());
                    center = CenterController.searchCenterByIDNumber(listsheetDetails.get(i).getCenter_ID());
                    account = AccountController.searchAccountByIDNumber("" + center.getAccount_ID());

                    v.add(center.getCenter_Name());
                    v.add(listsheetDetails.get(i).getCenter_ID());
                    v.add(account.getAccount_Name());
                    v.add(listsheetDetails.get(i).getSheetDetails_FC());
                    v.add(listsheetDetails.get(i).getSheetDetails_Cash());
                    v.add(listsheetDetails.get(i).getSheetDetails_Excess());
                    v.add(listsheetDetails.get(i).getSheetDetails_PD());

                    dtm.addRow(v);
                }

            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Select Date first");
//                Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Select Date first");
//                Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "There is no data in this date");
//                Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
//            else if (jTextField9.getText().equals("") && !jTextField10.getText().equals("")) {
//                Center center = CenterController.searchCenterByIDNumber(jTextField10.getText());
//                dtm.setRowCount(0);
//                Vector v = new Vector();
//                v.add(center.getAccount_ID());
//                v.add(center.getCenter_ID());
//                v.add(center.getCenter_Name());
//                v.add(center.getCenter_com());
//                v.add(center.getCenter_exp());
//                v.add(center.getCenter_lessCom());
//                v.add(center.getCenter_loan());
//                v.add(center.getCenter_noCom());
//                v.add(center.getCenter_paperCash());
//                dtm.addRow(v);
//            }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            if (!jTextField9.getText().equals("") && jTextField10.getText().equals("")) {

                List<Center> list = CenterController.searchCenterByName(jTextField9.getText());
                dtm.setRowCount(0);
                for (int i = 0; i < list.size(); i++) {
                    Vector v = new Vector();
                    v.add(list.get(i).getAccount_ID());
                    v.add(list.get(i).getCenter_ID());
                    v.add(list.get(i).getCenter_Name());
                    v.add(list.get(i).getCenter_com());
                    v.add(list.get(i).getCenter_exp());
                    v.add(list.get(i).getCenter_lessCom());
                    v.add(list.get(i).getCenter_loan());
                    v.add(list.get(i).getCenter_noCom());
                    v.add(list.get(i).getCenter_paperCash());
                    dtm.addRow(v);
                }
            } else if (jTextField9.getText().equals("") && !jTextField10.getText().equals("")) {
                Center center = CenterController.searchCenterByIDNumber(jTextField10.getText());
                dtm.setRowCount(0);
                Vector v = new Vector();
                v.add(center.getAccount_ID());
                v.add(center.getCenter_ID());
                v.add(center.getCenter_Name());
                v.add(center.getCenter_com());
                v.add(center.getCenter_exp());
                v.add(center.getCenter_lessCom());
                v.add(center.getCenter_loan());
                v.add(center.getCenter_noCom());
                v.add(center.getCenter_paperCash());
                dtm.addRow(v);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CenterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Date mddate = jDateChooser1.getDate();
            String mdate = String.format("%1$tY/%1$tm/%1$td", mddate);
            boolean b = SheetDetailsController.deleteCenterByDate(mdate);
            if (b) {
                JOptionPane.showMessageDialog(this, "All data are deleted in this " + mdate);

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(sheetDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        if (jTextField4.getText().length() == 0) {
            jButton1.setEnabled(false);
            jButton6.setEnabled(false);
        } else {
            if (jTextField9.getText().length() != 0 && jTextField3.getText().length() != 0 && jTextField4.getText().length() != 0 && jTextField5.getText().length() != 0 && jTextField6.getText().length() != 0) {
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);
            } else {
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField4KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
